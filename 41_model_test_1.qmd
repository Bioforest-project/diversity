```{r setup}
#| message: false
#| include: false
library(tidyverse)
```

# Model test 1 {.unnumbered}

```{r dataprep}
#| eval: false
paracou <- list.files("data/harmonized_datasets_ss",
  full.names = TRUE, pattern = "paracou"
) %>%
  lapply(read_csv,
    col_types = cols(
      TreeFieldNum = col_character(),
      IdTree = col_character(),
      TreeFieldNumOriginal = col_character(),
      Site = col_character()
    )
  ) %>%
  bind_rows() %>%
  filter(LifeStatus) %>%
  select(Site, Year, Plot, PlotArea, Family, Genus, Species, Diameter) %>%
  ungroup() %>%
  rename_all(tolower) %>%
  rename(area = plotarea) %>%
  mutate(genus = gsub("Indet.", "", genus)) %>%
  mutate(species = gsub("Indet.", "undet", species)) %>%
  mutate(rel_year = year - 1986) %>%
  filter(paste(plot, year) != "15 2010")

missiones <- read_csv("data/harmonized_datasets_ss/output_MISIONES.csv") %>%
  filter(LifeStatus) %>%
  filter(!(Family %in% c("muerto", "ND"))) %>%
  select(Site, Year, Plot, PlotArea, Family, ScientificName, Diameter) %>%
  mutate(Family = gsub("No determinado", "undet", Family)) %>%
  mutate(ScientificName = gsub("No Determinado", "undet undet", ScientificName)) %>%
  separate(ScientificName, c("Genus", "Species")) %>%
  mutate(Species = ifelse(is.na(Species), "undet", Species)) %>%
  mutate(Year = ifelse(Year == 2018, 2019, Year)) %>%
  rename_all(tolower) %>%
  rename(area = plotarea) %>%
  mutate(rel_year = year - 1999) %>%
  filter(!(paste(plot, year) %in% c("19 2003", "19 2004"))) %>%
  na.omit()

moju <- read_csv("data/harmonized_datasets_ss/output_moju.csv",
  locale = readr::locale(encoding = "latin1")
) %>%
  mutate(Site = "Moju") %>%
  filter(LifeStatus) %>%
  select(Site, Year, Plot, PlotArea, VernName, Diameter) %>%
  separate(VernName, c("VernName", "GenusSpecies"), sep = "\\[") %>%
  select(-VernName) %>%
  mutate(GenusSpecies = gsub("]", "", GenusSpecies)) %>%
  separate(GenusSpecies, c("Genus", "Species")) %>%
  mutate(Species = ifelse(Genus == "", "undet", Species)) %>%
  mutate(Genus = ifelse(Genus == "", "undet", Genus)) %>%
  rename_all(tolower) %>%
  rename(area = plotarea) %>%
  mutate(rel_year = year - 1997)

gathered <- bind_rows(paracou, missiones, moju)

wd <- BIOMASS::getWoodDensity(gathered$genus, gathered$species)

gathered <- gathered %>%
  left_join(select(wd, genus, species, meanWD) %>%
    group_by(genus, species) %>% summarise(wd = mean(meanWD))) %>%
  mutate(x = as.numeric(recode(site,
    "Paracou" = -52.92486,
    "Missiones" = -54.23446,
    "Moju" = -48.798
  ))) %>%
  mutate(y = as.numeric(recode(site,
    "Paracou" = 5.27877,
    "Missiones" = -26.91669,
    "Moju" = -2.156
  )))

gathered$agb <- BIOMASS::computeAGB(gathered$diameter, gathered$wd,
  coord = cbind(gathered$x, gathered$y)
)

gathered <- gathered %>%
  group_by(site, rel_year, plot, area) %>%
  summarise(
    wd = mean(wd),
    agb = sum(agb),
    ba = sum((diameter / 2)^2 * pi) / 10^4,
    n = n(),
    gini = DescTools::Gini(diameter),
    qmd = sitree::QMD.cm.f(diameter)
  ) %>%
  mutate(
    ba = ba / area,
    n = n / area,
    agb = agb / area
  )

disturbance <- gathered %>%
  group_by(site, plot, rel_year) %>%
  filter(rel_year < 6) %>%
  group_by(site, plot, post = as.numeric(rel_year > 0)) %>%
  summarise(ba_mean = mean(ba), ba_min = min(ba)) %>%
  gather(metric, value, -plot, -post, -site) %>%
  mutate(metric = paste0(metric, "_", post)) %>%
  select(-post) %>%
  pivot_wider(names_from = metric, values_from = value) %>%
  mutate(delta_ba = ba_mean_0 - ba_min_1) %>%
  select(site, plot, delta_ba) %>%
  mutate(delta_ba = ifelse(is.na(delta_ba), 0, delta_ba))

gathered <- gathered %>%
  left_join(disturbance) %>%
  ungroup() %>%
  mutate(sitenum = as.numeric(as.factor(site))) %>%
  mutate(siteplot = paste0(site, "_", plot)) %>%
  mutate(plotnum = as.numeric(as.factor(siteplot)))

write_tsv(gathered, "outputs/data_ws3.tsv")
```

```{r distfig}
#| message: false
#| warning: false
read_tsv("outputs/data_ws3.tsv") %>%
  select(site, plot, delta_ba) %>%
  unique() %>%
  ggplot(aes(as.character(plot), delta_ba, fill = (delta_ba < 1))) +
  geom_col() +
  theme_bw() +
  facet_wrap(~site, scales = "free") +
  coord_flip()
```

```{r traj}
#| message: false
#| warning: false
read_tsv("outputs/data_ws3.tsv") %>%
  gather(
    variable, value, -site, -plot, -sitenum, -plotnum,
    -siteplot, -delta_ba, -rel_year, -area
  ) %>%
  ggplot(aes(rel_year, value, col = site, group = paste(site, plot))) +
  geom_point() +
  geom_line() +
  theme_bw() +
  facet_wrap(~variable, scales = "free_y")
```

```{r model}
#| eval: false
library(rstan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
model <- rstan::stan_model("models/scratch.stan")
data <- read_tsv("outputs/data_ws3.tsv")
data_rec <- data %>% filter(delta_ba >= 1, rel_year > 0)
data_old <- data %>% filter(delta_ba < 1)
data_pre <- data %>% filter(rel_year <= 0)
mdata <- list(
  n_rec = nrow(data_rec),
  n_old = nrow(data_old),
  n_pre = nrow(data_pre),
  n_site = max(data$sitenum),
  n_plot = max(data$plotnum),
  agb_rec = data_rec$agb,
  agb_old = data_old$agb,
  agb_pre = data_pre$agb,
  time = data_rec$rel_year,
  site_rec = data_rec$sitenum,
  site_old = data_old$sitenum,
  site_pre = data_pre$sitenum,
  plot_rec = data_rec$plotnum,
  plot_old = data_old$plotnum,
  plot_pre = data_pre$plotnum
)
fit <- rstan::sampling(model, mdata, chains = 4, cores = 4)
all_pars <- as.data.frame(fit) %>%
  gather(parameter, value) %>%
  group_by(parameter) %>%
  summarise(
    m = median(value),
    ll = quantile(value, 0.05),
    l = quantile(value, 0.25),
    hh = quantile(value, 0.95),
    h = quantile(value, 0.75)
  ) %>%
  separate(parameter, c("parameter", "index"), "\\[") %>%
  mutate(index = as.numeric(gsub("]", "", index)))

save(all_pars, data_rec, file = "outputs/scratch_model.Rdata")
```

```{r}
load("outputs/scratch_model.Rdata")
```

```{r}
#| eval: false
unique(all_pars$parameter)
```

```{r mu}
#| message: false
#| warning: false
all_pars %>%
  filter(grepl("mu", parameter)) %>%
  ggplot(aes(parameter, m)) +
  geom_linerange(aes(ymin = ll, ymax = hh)) +
  geom_linerange(aes(ymin = l, ymax = h), linewidth = 1.2) +
  geom_point() +
  theme_bw() +
  coord_flip()
```

```{r sigma}
#| message: false
#| warning: false
all_pars %>%
  filter(grepl("sigma", parameter)) %>%
  ggplot(aes(parameter, m)) +
  geom_linerange(aes(ymin = ll, ymax = hh)) +
  geom_linerange(aes(ymin = l, ymax = h), linewidth = 1.2) +
  geom_point() +
  theme_bw() +
  coord_flip()
```

```{r theta0}
#| message: false
#| warning: false
all_pars %>%
  filter(parameter == "theta0_p") %>%
  rename(plotnum = index) %>%
  left_join(select(data_rec, site, plot, plotnum) %>% unique()) %>%
  ggplot(aes(paste(site, plot), m)) +
  geom_linerange(aes(ymin = ll, ymax = hh)) +
  geom_linerange(aes(ymin = l, ymax = h), linewidth = 1.2) +
  geom_point() +
  theme_bw() +
  coord_flip() +
  ylab("theta0")
```

```{r lambda}
#| message: false
#| warning: false
all_pars %>%
  filter(parameter == "lambda_p") %>%
  rename(plotnum = index) %>%
  left_join(select(data_rec, site, plot, plotnum) %>% unique()) %>%
  ggplot(aes(paste(site, plot), m)) +
  geom_linerange(aes(ymin = ll, ymax = hh)) +
  geom_linerange(aes(ymin = l, ymax = h), linewidth = 1.2) +
  geom_point() +
  theme_bw() +
  coord_flip() +
  ylab("lambda")
```

```{r thetaInf}
#| message: false
#| warning: false
all_pars %>%
  filter(parameter == "thetaInf_s") %>%
  rename(sitenum = index) %>%
  left_join(select(data_rec, site, sitenum) %>% unique()) %>%
  ggplot(aes(site, m)) +
  geom_linerange(aes(ymin = ll, ymax = hh)) +
  geom_linerange(aes(ymin = l, ymax = h), linewidth = 1.2) +
  geom_point() +
  theme_bw() +
  coord_flip() +
  ylab("thetaInf")
```

```{r preds}
#| message: false
#| warning: false
all_pars %>%
  filter(parameter == "pred_agb_rec") %>%
  arrange(index) %>%
  mutate(observed = data_rec$agb) %>%
  ggplot(aes(observed, m)) +
  geom_point() +
  geom_linerange(aes(ymin = ll, ymax = hh)) +
  geom_linerange(aes(ymin = l, ymax = h), linewidth = 1.2) +
  theme_bw() +
  ylim(0, 1000)
```

```{r}
load("outputs/scratch_model.Rdata")
data.frame(rel_year = 0:100) %>%
  mutate(indices = list(select(data_rec, sitenum, plotnum) %>% unique())) %>%
  unnest() %>%
  left_join(
    filter(all_pars, parameter == "theta0_p") %>%
      rename(plotnum = index, theta0_p = m) %>%
      select(plotnum, theta0_p)
  ) %>%
  left_join(
    filter(all_pars, parameter == "lambda_p") %>%
      rename(plotnum = index, lambda_p = m) %>%
      select(plotnum, lambda_p)
  ) %>%
  left_join(
    filter(all_pars, parameter == "thetaInf_s") %>%
      rename(sitenum = index, thetaInf_s = m) %>%
      select(sitenum, thetaInf_s)
  ) %>%
  mutate(agb = theta0_p + (thetaInf_s - theta0_p) * (1 - exp(-lambda_p * rel_year))) %>%
  filter(sitenum == 3) %>%
  ggplot(aes(rel_year, agb, group = plotnum, col = as.character(plotnum))) +
  geom_line() +
  geom_point(data = data_rec %>% filter(sitenum == 3)) +
  theme_bw() +
  facet_wrap(~sitenum, nrow = 3)
```
