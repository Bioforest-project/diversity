```{r setup}
#| message: false
#| include: false
library(tidyverse)
```

# Short term {.unnumbered}

Test of model shapes with Missiones and Paracou data for basal area post logging short term trajectory.

## Exploration

We first investigated prelogging basal area.

```{r data}
#| message: false
#| warning: false
#| fig-cap: "Prelogging basal area."
data <- read_tsv("outputs/gathered.tsv") %>%
  group_by(site, year, rel_year, delta_ba, plot) %>%
  summarise(ba = sum(ba)) %>%
  filter(rel_year <= 5) %>%
  filter(!(paste(site, plot) %in% paste("Paracou", 13:15))) %>%
  select(-year, -delta_ba)
data %>%
  group_by(site, plot) %>%
  filter(rel_year <= 0) %>%
  ggplot(aes(paste(site, plot), ba)) +
  geom_boxplot() +
  coord_flip() +
  theme_bw() +
  ylab("prelogging BA") +
  xlab("")
```

As Paracou is among few sites with multiple prelogging inventories and showing a small variation, we summarised a single value of prelogging basal area that we set as the year 0 basal area value.

```{r data2}
#| message: false
#| warning: false
#| fig-cap: "Postlogging basal area trajectory."
data2 <- bind_rows(
  data %>%
    group_by(site, plot) %>%
    filter(rel_year <= 0) %>%
    summarise(ba = mean(ba, na.rm = TRUE)) %>%
    mutate(rel_year = 0),
  data %>%
    filter(rel_year > 0)
)
data2 %>%
  ggplot(aes(rel_year, ba)) +
  geom_point() +
  theme_bw() +
  facet_wrap(~ paste(site, plot)) +
  xlab("") +
  ylab(expression("Basal area of tree " >= 10 ~ "cm dbh [" ~ m^{
    2
  } ~ ha^{
    -~1
  } ~ "]")) +
  geom_vline(xintercept = 0, linetype = "dashed")
```

We next used an exponential decay function to model the basal area loss after logging:

$$
BA \sim \mathcal N ( BA_{post} + (BA_{pre} - BA_{post}) \times e^{-\alpha \times time} \sigma^2)
$$

with $BA_{pre}$ the prelogging basal area, $BA_{post}$ the minimal basal area post logging, and $\alpha$ the time decay.

```{r modfit}
#| message: false
#| warning: false
#| error: false
#| include: false
model <- data2 %>%
  ungroup() %>%
  nest_by(site, plot) %>%
  mutate(m = list(
    nls(ba ~ ba_post + (ba_pre - ba_post) * exp(-alpha * rel_year),
      start = list(ba_pre = 30, ba_post = 20, alpha = 1), data = data
    ) %>%
      try()
  )) %>%
  select(-data) %>%
  filter(!inherits(m, "try-error")) %>%
  mutate(m = list(broom::tidy(m))) %>%
  unnest(m)
```

```{r modtab}
#| message: false
#| warning: false
model %>%
  mutate(value = paste0(round(estimate, 3), " (", round(p.value, 3), ")")) %>%
  arrange(term) %>%
  select(site, plot, term, value) %>%
  pivot_wider(names_from = term, values_from = value) %>%
  knitr::kable()
```

> Most `nls` fits fails and we should further fit a single model with `stan`.

Interestingly from the parameters we can derive the following indices:

-   $\Delta_{BA} = BA_{pre} - BA_{post}$ the lost basal area corresponding to the disturbance intensity
-   $t_{95}=\frac3\alpha$

This indices are exemplified on the figure below:

```{r indicesex}
#| message: false
#| warning: false
#| fig-lab: "Caption."
alpha <- 1
ba_pre <- 30
ba_post <- 20
t_95 <- 3 / alpha
ggplot(data.frame(x = rnorm(1), y = rnorm(1)), aes(x, y)) +
  xlim(0, 5) +
  geom_function(fun = function(x) {
    ba_post +
      (ba_pre - ba_post) * exp(-alpha * x)
  }, col = "grey") +
  theme_bw() +
  ylab("Basal Area BA") +
  xlab("Time T") +
  geom_point(x = 0, y = ba_pre, size = 2) +
  ggrepel::geom_text_repel(label = expression(BA[pre]), x = 0, y = ba_pre) +
  geom_point(x = 5, y = ba_post, size = 2) +
  ggrepel::geom_text_repel(label = expression(BA[post]), x = 5, y = ba_post) +
  geom_point(x = t_95, y = ba_pre - 0.95 * (ba_pre - ba_post), size = 2) +
  ggrepel::geom_text_repel(
    label = expression(t[95]), x = t_95,
    y = ba_pre - 0.95 * (ba_pre - ba_post)
  )
```

We thus obtained the following parameters and corresponding trajectories:

```{r}
#| message: false
#| warning: false
inds <- model %>%
  select(site, plot, term, estimate) %>%
  pivot_wider(names_from = term, values_from = estimate) %>%
  mutate(delta_ba = ba_pre - ba_post, t_95 = 3 / alpha)
knitr::kable(inds, digits = 3)
```

```{r preds}
#| message: false
#| warning: false
preds <- inds %>%
  mutate(rel_year = list(0:5)) %>%
  unnest(rel_year) %>%
  mutate(ba = ba_post + (ba_pre - ba_post) * exp(-alpha * rel_year))
data2 %>%
  ggplot(aes(rel_year, ba)) +
  geom_point() +
  geom_line(data = preds) +
  theme_bw() +
  facet_wrap(~ paste(site, plot)) +
  xlab("") +
  ylab(expression("Basal area of tree " >= 10 ~ "cm dbh [" ~ m^{
    2
  } ~ ha^{
    -~1
  } ~ "]")) +
  geom_vline(xintercept = 0, linetype = "dashed")
```

This is interesting results but we further explored this with a full Bayesian model.

## Full model

We used a single model defined as:

$$
BA_{plot} \sim \mathcal N ( BA_{post,plot} + \Delta BA_{plot} \times e^{-\alpha_{plot} \times time}, \sigma^2)
$$

We ensured positive $BA_{post,plot}$ , $\Delta BA_{plot}$, $\alpha_{plot}$, and $\sigma$. And we computed back $t_{95,plot} = \frac3\alpha_{plot}$ and $BA_{pre,plot}=BA_{post,plot}+\Delta BA_{plot}$.

```{r stanfit}
#| message: false
#| warning: false
#| include: false
library(cmdstanr)
data2$site_plot <- paste0(data2$site, "_", data2$plot)
data2$site_plot_num <- as.numeric(as.factor(data2$site_plot))
mdata <- list(
  N = nrow(data2),
  P = max(data2$site_plot_num),
  ba = data2$ba,
  time = data2$rel_year,
  plot = data2$site_plot_num
)
m_fixed <- cmdstan_model("models/str_fixed.stan")
f_fixed <- m_fixed$sample(mdata, chains = 4, max_treedepth = 15)
```

The model converged quickly.

Looking at $\Delta_{BA}$ we can quickly identify control plots with non-significant disturbance values and obtain a relatively precise value of disturbance intensity for the other plots.

```{r deltaba}
#| message: false
#| warning: false
f_fixed$draws(variables = "delta_ba", format = "df") %>%
  select(-.chain, -.draw, -.iteration) %>%
  gather("term", "estimate") %>%
  group_by(term) %>%
  separate(term, c("term", "site_plot_num"), "\\[") %>%
  mutate(site_plot_num = as.numeric(gsub("]", "", site_plot_num))) %>%
  left_join(data2 %>% select(site, plot, site_plot_num) %>% unique()) %>%
  ggplot(aes(x = estimate, y = as.character(plot), fill = site)) +
  ggridges::geom_density_ridges2() +
  theme_bw() +
  ylab("") +
  xlab(expression(Delta[BA]))
```

Similarly, we can have a quick estimate of predisturbance basal area with narrow intervals.

```{r bapre}
#| message: false
#| warning: false
f_fixed$draws(variables = "ba_pre", format = "df") %>%
  select(-.chain, -.draw, -.iteration) %>%
  gather("term", "estimate") %>%
  group_by(term) %>%
  separate(term, c("term", "site_plot_num"), "\\[") %>%
  mutate(site_plot_num = as.numeric(gsub("]", "", site_plot_num))) %>%
  left_join(data2 %>% select(site, plot, site_plot_num) %>% unique()) %>%
  ggplot(aes(x = estimate, y = as.character(plot), fill = site)) +
  ggridges::geom_density_ridges2() +
  theme_bw() +
  ylab("") +
  xlab(expression(BA[pre]))
```

But without surprise the $\alpha$ values is much more uncertain, leading thus to an uncertain time of maximal disturbance $t_{95}$.

```{r alpha}
#| message: false
#| warning: false
f_fixed$draws(variables = "alpha", format = "df") %>%
  select(-.chain, -.draw, -.iteration) %>%
  gather("term", "estimate") %>%
  group_by(term) %>%
  separate(term, c("term", "site_plot_num"), "\\[") %>%
  mutate(site_plot_num = as.numeric(gsub("]", "", site_plot_num))) %>%
  left_join(data2 %>% select(site, plot, site_plot_num) %>% unique()) %>%
  ggplot(aes(x = estimate, y = as.character(plot), fill = site)) +
  ggridges::geom_density_ridges2() +
  theme_bw() +
  ylab("") +
  xlab(expression(alpha))
```

We obtained the following trajectories with in grey the narrow 95% confidence interval around the mean.

```{r predstan}
#| message: false
#| warning: false
inds <- f_fixed$draws(
  variables = c("ba_post", "ba_pre", "delta_ba", "alpha", "t_95"),
  format = "df"
) %>%
  select(-.chain, -.draw, -.iteration) %>%
  gather("term", "estimate") %>%
  group_by(term) %>%
  summarise(l = quantile(estimate, 0.025), m = median(estimate), h = quantile(estimate, 0.975)) %>%
  separate(term, c("term", "site_plot_num"), "\\[") %>%
  mutate(site_plot_num = as.numeric(gsub("]", "", site_plot_num))) %>%
  gather(metric, value, -term, -site_plot_num) %>%
  mutate(term = paste0(term, "_", metric)) %>%
  select(-metric) %>%
  pivot_wider(names_from = term, values_from = value)
preds <- inds %>%
  mutate(rel_year = list(0:5)) %>%
  unnest(rel_year) %>%
  mutate(
    ba_l = ba_post_l + (ba_pre_l - ba_post_l) * exp(-alpha_l * rel_year),
    ba_m = ba_post_m + (ba_pre_m - ba_post_m) * exp(-alpha_m * rel_year),
    ba_h = ba_post_h + (ba_pre_h - ba_post_h) * exp(-alpha_h * rel_year)
  ) %>%
  left_join(data2 %>% select(site, plot, site_plot_num) %>% unique())
data2 %>%
  ggplot(aes(x = rel_year)) +
  geom_point(aes(y = ba)) +
  geom_ribbon(aes(ymin = ba_l, ymax = ba_h), data = preds, fill = "grey70") +
  geom_line(aes(y = ba_m), data = preds) +
  theme_bw() +
  facet_wrap(~ paste(site, plot)) +
  xlab("") +
  ylab(expression("Basal area of tree " >= 10 ~ "cm dbh [" ~ m^{
    2
  } ~ ha^{
    -~1
  } ~ "]")) +
  geom_vline(xintercept = 0, linetype = "dashed")
```

Interestingly, disturbance intensity did not correlates with time of maximal disturbance nor predisturbance basal area

```{r tdeltarel}
#| message: false
#| warning: false
cowplot::plot_grid(
  inds %>%
    left_join(data2 %>% select(site, plot, site_plot_num) %>% unique()) %>%
    filter(delta_ba_m > 2) %>%
    ggplot(aes(delta_ba_m, t_95_m)) +
    geom_point(aes(col = site)) +
    ggrepel::geom_text_repel(aes(label = plot)) +
    theme_bw() +
    theme(legend.position = "bottom") +
    xlab(expression(Delta[BA])) +
    ylab(expression(t[95])) +
    ggpubr::stat_cor(),
  inds %>%
    left_join(data2 %>% select(site, plot, site_plot_num) %>% unique()) %>%
    filter(delta_ba_m > 2) %>%
    ggplot(aes(ba_pre_m, delta_ba_m)) +
    geom_point(aes(col = site)) +
    ggrepel::geom_text_repel(aes(label = plot)) +
    theme_bw() +
    theme(legend.position = "bottom") +
    ylab(expression(Delta[BA])) +
    xlab(expression(BA[pre])) +
    ggpubr::stat_cor()
)
```
